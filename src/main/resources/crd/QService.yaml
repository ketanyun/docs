apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: qservices.ketanyun.cn
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: ketanyun.cn
    # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: qservices
    # singular name to be used as an alias on the CLI and for display
    singular: qservice
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: QService
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - qsvc
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1alpha1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - service
                - tenant
              properties:
                # 服务信息 
                service:
                  type: object
                  required:
                    - name
                    - kind
                    - text
                    - backend
                  properties:
                    # 服务名，参用于服务发现 
                    name:
                      type: string
                      description: service name for discovery 
                    kind: 
                      type: string
                      pattern: '^(REST|GraphQL)$'
                    # 友好的服务名
                    text: 
                      type: string
                    # 描述 
                    description: 
                      type: string
                    # 带命名空间的服务标签组，参考：https://github.com/ketanyun/docs/wiki/Tags
                    
                    # 标准分类的标签定义：
                    # #Category:Platform 平台
                    # #Category:Code     代码
                    # #Category:Tool     工具
                    # #Category:Workflow 流程
                    # #Category:Identity 身份

                    # 服务种族的标签定义：
                    # #Spec:Assemble    组装API  
                    # #Spec:Bootstrap   自展API
                    # #Spec:Workspace   工作区API
                    labels:
                      type: array
                      items:
                        type: string
                    # 对外提供服务的地址。`GraphQL`类型可不给出，默认 /bus/graphql/{service} 
                    uri: 
                      type: string
                    # 后端实际地址，即 EndPoint 
                    backend: 
                      type: string
                    # 当有其他后端地址时，可增加。多个后端服务会按顺序拼接，优先级依次降低
                    backends:
                      type: array
                      items: 
                        type: object
                        properties: 
                          # 额外后端地址的 EndPoint 地址
                          uri:
                            type: string
                    # 后端实际地址的 ContextPath，可为空，用于`BootstrapAPI`等地址拼接 
                    backendContextPath:
                      type: string
                    # 账号主体，默认使用租户级配置，参考 [Principal](Principal)  
                    principal: 
                      type: string
                      pattern: '^(openid|usercode)$'
                      
                    # 定义此服务提供哪些 oauth 的 scope
                    scopes:
                      type: array
                      description: OAuth scopes provided
                      items:
                        type: object
                        required:
                          - name
                        properties:
                          name: 
                            type: string
                          # 授权类型，不给出视为全部支持
                          # 可选值：`client_credentials`、`authorization_code`、`implicit`、`password`
                          grant_types: 
                            type: array
                            items:
                              type: string
                    
                    # 定义此服务提供哪些功能点，用于 QLicense 授权
                    features:
                      type: array
                      items:
                        type: object
                        required:
                          - name
                        properties:
                          name:
                            type: string   # 功能点名称，要求服务内唯一，用于 QLicense 授权
                          text:
                            type: string   # 功能点显示名，人读
                          description: 
                            type: string   # 功能点描述，人读
                          dataType: 
                            type: string
                            enum:
                              - boolean    # 默认，该功能是否授权，可通过服务注解 @feature 指定验证
                              - integer    # 该功能的授权值，需服务自身验证，可通过同名 argument 参数传递
                              - string     # 该功能的授权值，需服务自身验证，可通过同名 argument 参数传递 

                    # 关联应用(QApp)
                    app:
                      type: object
                      required:
                        - name
                      properties:
                        # QApp 的 metadata.name 
                        name: 
                          type: string   
                        # 默认false。true 表示使用 client_id 作为服务名
                        asServiceName:
                          type: boolean 
                       
                    # 定义该服务除设置 `服务名_URL` 之外其他需要设置到服务发现configmap中的变量 
                    env:
                      type: array
                      description: Additional ENVs set to qservice-discovery configmap 
                      items:
                        type: object
                        required:
                          - name
                          - value
                        properties:
                          name: 
                            type: string
                          value: 
                            type: string
                # 多租信息
                tenant:
                  type: object
                  required:
                    - multitenancy
                  properties:
                    # 租户编码
                    name: 
                      type: string
                    # 是否支持多租。为true时，租户必须为 "localhost"
                    multitenancy: 
                      type: boolean
